{"version":3,"file":"lib_index_js.cc898f1e555e467c62ea.js","mappings":"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","sources":["webpack://@jupyter/rtc-core/./src/docprovider/awareness.ts","webpack://@jupyter/rtc-core/./src/docprovider/filebrowser.ts","webpack://@jupyter/rtc-core/./src/docprovider/requests.ts","webpack://@jupyter/rtc-core/./src/docprovider/ydrive.ts","webpack://@jupyter/rtc-core/./src/docprovider/yprovider.ts","webpack://@jupyter/rtc-core/./src/executionindicator.tsx","webpack://@jupyter/rtc-core/./src/handler.ts","webpack://@jupyter/rtc-core/./src/index.ts","webpack://@jupyter/rtc-core/./src/kernelstatus.tsx","webpack://@jupyter/rtc-core/./src/notebook.ts"],"sourcesContent":["/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\nimport { User } from '@jupyterlab/services';\n\nimport { IDisposable } from '@lumino/disposable';\n\nimport { IAwareness } from '@jupyter/ydoc';\n\nimport { WebsocketProvider } from 'y-websocket';\n\nexport interface IContent {\n  type: string;\n  body: string;\n}\n\n/**\n * A class to provide Yjs synchronization over WebSocket.\n *\n * We specify custom messages that the server can interpret. For reference please look in yjs_ws_server.\n *\n */\nexport class WebSocketAwarenessProvider\n  extends WebsocketProvider\n  implements IDisposable\n{\n  /**\n   * Construct a new WebSocketAwarenessProvider\n   *\n   * @param options The instantiation options for a WebSocketAwarenessProvider\n   */\n  constructor(options: WebSocketAwarenessProvider.IOptions) {\n    super(options.url, options.roomID, options.awareness.doc, {\n      awareness: options.awareness\n    });\n\n    this._awareness = options.awareness;\n\n    this._user = options.user;\n    this._user.ready\n      .then(() => this._onUserChanged(this._user))\n      .catch(e => console.error(e));\n    this._user.userChanged.connect(this._onUserChanged, this);\n  }\n\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n\n    this._user.userChanged.disconnect(this._onUserChanged, this);\n    this._isDisposed = true;\n    this.destroy();\n  }\n\n  private _onUserChanged(user: User.IManager): void {\n    this._awareness.setLocalStateField('user', user.identity);\n  }\n\n  private _isDisposed = false;\n  private _user: User.IManager;\n  private _awareness: IAwareness;\n}\n\n/**\n * A namespace for WebSocketAwarenessProvider statics.\n */\nexport namespace WebSocketAwarenessProvider {\n  /**\n   * The instantiation options for a WebSocketAwarenessProvider.\n   */\n  export interface IOptions {\n    /**\n     * The server URL\n     */\n    url: string;\n\n    /**\n     * The room ID\n     */\n    roomID: string;\n\n    /**\n     * The awareness object\n     */\n    awareness: IAwareness;\n\n    /**\n     * The user data\n     */\n    user: User.IManager;\n  }\n}\n","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { Dialog, showDialog } from '@jupyterlab/apputils';\nimport { IDocumentWidget } from '@jupyterlab/docregistry';\nimport { ContentsManager } from '@jupyterlab/services';\n\nimport {\n  IEditorTracker,\n  IEditorWidgetFactory,\n  FileEditorFactory\n} from '@jupyterlab/fileeditor';\nimport { ILogger, ILoggerRegistry } from '@jupyterlab/logconsole';\nimport {\n  INotebookTracker,\n  INotebookWidgetFactory,\n  NotebookWidgetFactory\n} from '@jupyterlab/notebook';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\n\nimport { YFile, YNotebook } from '@jupyter/ydoc';\n\nimport {\n  ICollaborativeContentProvider,\n  IGlobalAwareness\n} from '@jupyter/collaborative-drive';\nimport { RtcContentProvider } from './ydrive';\nimport { Awareness } from 'y-protocols/awareness';\n\nconst TWO_SESSIONS_WARNING =\n  'The file %1 has been opened with two different views. ' +\n  'This is not supported. Please close this view; otherwise, ' +\n  'some of your edits may not be saved properly.';\n\nexport const rtcContentProvider: JupyterFrontEndPlugin<ICollaborativeContentProvider> =\n  {\n    id: '@jupyter-rtc-core/docprovider-extension:content-provider',\n    description: 'The RTC content provider',\n    provides: ICollaborativeContentProvider,\n    requires: [ITranslator],\n    optional: [IGlobalAwareness],\n    activate: (\n      app: JupyterFrontEnd,\n      translator: ITranslator,\n      globalAwareness: Awareness | null\n    ): ICollaborativeContentProvider => {\n      const trans = translator.load('jupyter_collaboration');\n      const defaultDrive = (app.serviceManager.contents as ContentsManager)\n        .defaultDrive;\n      if (!defaultDrive) {\n        throw Error(\n          'Cannot initialize content provider: default drive property not accessible on contents manager instance.'\n        );\n      }\n      const registry = defaultDrive.contentProviderRegistry;\n      if (!registry) {\n        throw Error(\n          'Cannot initialize content provider: no content provider registry.'\n        );\n      }\n      const rtcContentProvider = new RtcContentProvider({\n        apiEndpoint: '/api/contents',\n        serverSettings: defaultDrive.serverSettings,\n        user: app.serviceManager.user,\n        trans,\n        globalAwareness\n      });\n      registry.register('rtc', rtcContentProvider);\n      return rtcContentProvider;\n    }\n  };\n\n/**\n * Plugin to register the shared model factory for the content type 'file'.\n */\nexport const yfile: JupyterFrontEndPlugin<void> = {\n  id: '@jupyter-rtc-core/docprovider-extension:yfile',\n  description:\n    \"Plugin to register the shared model factory for the content type 'file'\",\n  autoStart: true,\n  requires: [ICollaborativeContentProvider, IEditorWidgetFactory],\n  activate: (\n    app: JupyterFrontEnd,\n    contentProvider: ICollaborativeContentProvider,\n    editorFactory: FileEditorFactory.IFactory\n  ): void => {\n    const yFileFactory = () => {\n      return new YFile();\n    };\n    contentProvider.sharedModelFactory.registerDocumentFactory(\n      'file',\n      yFileFactory\n    );\n    editorFactory.contentProviderId = 'rtc';\n  }\n};\n\n/**\n * Plugin to register the shared model factory for the content type 'notebook'.\n */\nexport const ynotebook: JupyterFrontEndPlugin<void> = {\n  id: '@jupyter/rtc-core/docprovider-extension:ynotebook',\n  description:\n    \"Plugin to register the shared model factory for the content type 'notebook'\",\n  autoStart: true,\n  requires: [ICollaborativeContentProvider, INotebookWidgetFactory],\n  optional: [ISettingRegistry],\n  activate: (\n    app: JupyterFrontEnd,\n    contentProvider: ICollaborativeContentProvider,\n    notebookFactory: NotebookWidgetFactory.IFactory,\n    settingRegistry: ISettingRegistry | null\n  ): void => {\n    let disableDocumentWideUndoRedo = true;\n\n    // Fetch settings if possible.\n    if (settingRegistry) {\n      settingRegistry\n        .load('@jupyterlab/notebook-extension:tracker')\n        .then(settings => {\n          const updateSettings = (settings: ISettingRegistry.ISettings) => {\n            const enableDocWideUndo = settings?.get(\n              'experimentalEnableDocumentWideUndoRedo'\n            ).composite as boolean;\n\n            disableDocumentWideUndoRedo = !(enableDocWideUndo ?? false);\n          };\n\n          updateSettings(settings);\n          settings.changed.connect((settings: ISettingRegistry.ISettings) =>\n            updateSettings(settings)\n          );\n        });\n    }\n\n    const yNotebookFactory = () => {\n      return new YNotebook({\n        disableDocumentWideUndoRedo\n      });\n    };\n    contentProvider.sharedModelFactory.registerDocumentFactory(\n      'notebook',\n      yNotebookFactory\n    );\n    notebookFactory.contentProviderId = 'rtc';\n  }\n};\n\n/**\n * The default collaborative drive provider.\n */\nexport const logger: JupyterFrontEndPlugin<void> = {\n  id: '@jupyter/rtc-core/docprovider-extension:logger',\n  description: 'A logging plugin for debugging purposes.',\n  autoStart: true,\n  optional: [ILoggerRegistry, IEditorTracker, INotebookTracker, ITranslator],\n  activate: (\n    app: JupyterFrontEnd,\n    loggerRegistry: ILoggerRegistry | null,\n    fileTracker: IEditorTracker | null,\n    nbTracker: INotebookTracker | null,\n    translator: ITranslator | null\n  ): void => {\n    const trans = (translator ?? nullTranslator).load('jupyter_collaboration');\n    const schemaID =\n      'https://schema.jupyter.org/jupyter_collaboration/session/v1';\n\n    if (!loggerRegistry) {\n      app.serviceManager.events.stream.connect((_, emission) => {\n        if (emission.schema_id === schemaID) {\n          console.debug(\n            `[${emission.room}(${emission.path})] ${emission.action ?? ''}: ${\n              emission.msg ?? ''\n            }`\n          );\n\n          if (emission.level === 'WARNING') {\n            showDialog({\n              title: trans.__('Warning'),\n              body: trans.__(TWO_SESSIONS_WARNING, emission.path),\n              buttons: [Dialog.okButton()]\n            });\n          }\n        }\n      });\n\n      return;\n    }\n\n    const loggers: Map<string, ILogger> = new Map();\n\n    const addLogger = (sender: unknown, document: IDocumentWidget) => {\n      const logger = loggerRegistry.getLogger(document.context.path);\n      loggers.set(document.context.localPath, logger);\n\n      document.disposed.connect(document => {\n        loggers.delete(document.context.localPath);\n      });\n    };\n\n    if (fileTracker) {\n      fileTracker.widgetAdded.connect(addLogger);\n    }\n\n    if (nbTracker) {\n      nbTracker.widgetAdded.connect(addLogger);\n    }\n\n    void (async () => {\n      const { events } = app.serviceManager;\n      for await (const emission of events.stream) {\n        if (emission.schema_id === schemaID) {\n          const logger = loggers.get(emission.path as string);\n\n          logger?.log({\n            type: 'text',\n            level: (emission.level as string).toLowerCase() as any,\n            data: `[${emission.room}] ${emission.action ?? ''}: ${\n              emission.msg ?? ''\n            }`\n          });\n\n          if (emission.level === 'WARNING') {\n            showDialog({\n              title: trans.__('Warning'),\n              body: trans.__(TWO_SESSIONS_WARNING, emission.path),\n              buttons: [Dialog.warnButton({ label: trans.__('Ok') })]\n            });\n          }\n        }\n      }\n    })();\n  }\n};\n","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection, Contents } from '@jupyterlab/services';\n\n/**\n * Document session endpoint provided by `jupyter_collaboration`\n * See https://github.com/jupyterlab/jupyter_collaboration\n */\n// const DOC_SESSION_URL = 'api/collaboration/session';\n\n/**\n * Document session model\n */\nexport interface ISessionModel {\n  /**\n   * Document format; 'text', 'base64',...\n   */\n  format: Contents.FileFormat;\n  /**\n   * Document type\n   */\n  type: Contents.ContentType;\n  /**\n   * File unique identifier\n   */\n  fileId: string;\n  /**\n   * Server session identifier\n   */\n  sessionId: string;\n}\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI<T = any>(\n  endPoint = '',\n  init: RequestInit = {}\n): Promise<T> {\n  // Make request to Jupyter API\n  const settings = ServerConnection.makeSettings();\n  const requestUrl = URLExt.join(settings.baseUrl, endPoint);\n\n  let response: Response;\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\n  } catch (error) {\n    throw new ServerConnection.NetworkError(error as any);\n  }\n\n  let data: any = await response.text();\n\n  if (data.length > 0) {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      console.error('Not a JSON response body.', response);\n    }\n  }\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message || data);\n  }\n\n  return data;\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { TranslationBundle } from '@jupyterlab/translation';\nimport {\n  Contents,\n  IContentProvider,\n  RestContentProvider,\n  SharedDocumentFactory,\n  ServerConnection,\n  User\n} from '@jupyterlab/services';\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { DocumentChange, ISharedDocument, YDocument } from '@jupyter/ydoc';\n\nimport { WebSocketProvider } from './yprovider';\nimport {\n  IDocumentProvider,\n  ISharedModelFactory\n} from '@jupyter/collaborative-drive';\nimport { Awareness } from 'y-protocols/awareness';\n\nconst DISABLE_RTC =\n  PageConfig.getOption('disableRTC') === 'true' ? true : false;\n\n/**\n * The url for the default drive service.\n */\nconst DOCUMENT_PROVIDER_URL = 'api/collaboration/room';\n\nnamespace RtcContentProvider {\n  export interface IOptions extends RestContentProvider.IOptions {\n    user: User.IManager;\n    trans: TranslationBundle;\n    globalAwareness: Awareness | null;\n  }\n}\n\nexport class RtcContentProvider\n  extends RestContentProvider\n  implements IContentProvider\n{\n  constructor(options: RtcContentProvider.IOptions) {\n    super(options);\n    this._user = options.user;\n    this._trans = options.trans;\n    this._globalAwareness = options.globalAwareness;\n    this._serverSettings = options.serverSettings;\n    this.sharedModelFactory = new SharedModelFactory(this._onCreate);\n    this._providers = new Map<string, WebSocketProvider>();\n  }\n\n  /**\n   * SharedModel factory for the content provider.\n   */\n  readonly sharedModelFactory: ISharedModelFactory;\n\n  get providers(): Map<string, IDocumentProvider> {\n    return this._providers;\n  }\n\n  /**\n   * Get a file or directory.\n   *\n   * @param localPath: The path to the file.\n   *\n   * @param options: The options used to fetch the file.\n   *\n   * @returns A promise which resolves with the file content.\n   */\n  async get(\n    localPath: string,\n    options?: Contents.IFetchOptions\n  ): Promise<Contents.IModel> {\n    if (options && options.format && options.type) {\n      const key = `${options.format}:${options.type}:${localPath}`;\n      const provider = this._providers.get(key);\n\n      if (provider) {\n        // If the document doesn't exist, `super.get` will reject with an\n        // error and the provider will never be resolved.\n        // Use `Promise.all` to reject as soon as possible. The Context will\n        // show a dialog to the user.\n        const [model] = await Promise.all([\n          super.get(localPath, { ...options, content: false }),\n          provider.ready\n        ]);\n        // The server doesn't return a model with a format when content is false,\n        // so set it back.\n        return { ...model, format: options.format };\n      }\n    }\n\n    return super.get(localPath, options);\n  }\n\n  /**\n   * Save a file.\n   *\n   * @param localPath - The desired file path.\n   *\n   * @param options - Optional overrides to the model.\n   *\n   * @returns A promise which resolves with the file content model when the\n   *   file is saved.\n   */\n  async save(\n    localPath: string,\n    options: Partial<Contents.IModel> = {}\n  ): Promise<Contents.IModel> {\n    // Check that there is a provider - it won't e.g. if the document model is not collaborative.\n    if (options.format && options.type) {\n      const key = `${options.format}:${options.type}:${localPath}`;\n      const provider = this._providers.get(key);\n\n      if (provider) {\n        // Save is done from the backend\n        const fetchOptions: Contents.IFetchOptions = {\n          type: options.type,\n          format: options.format,\n          content: false\n        };\n        return this.get(localPath, fetchOptions);\n      }\n    }\n\n    return super.save(localPath, options);\n  }\n\n  /**\n   * A signal emitted when a file operation takes place.\n   */\n  get fileChanged(): ISignal<this, Contents.IChangedArgs> {\n    return this._ydriveFileChanged;\n  }\n\n  private _onCreate = (\n    options: Contents.ISharedFactoryOptions,\n    sharedModel: YDocument<DocumentChange>\n  ) => {\n    if (typeof options.format !== 'string') {\n      return;\n    }\n\n    try {\n      const provider = new WebSocketProvider({\n        url: URLExt.join(this._serverSettings.wsUrl, DOCUMENT_PROVIDER_URL),\n        path: options.path,\n        format: options.format,\n        contentType: options.contentType,\n        model: sharedModel,\n        user: this._user,\n        translator: this._trans\n      });\n\n      // Add the document path in the list of opened ones for this user.\n      const state = this._globalAwareness?.getLocalState() || {};\n      const documents: string[] = state.documents || [];\n      if (!documents.includes(options.path)) {\n        documents.push(options.path);\n        this._globalAwareness?.setLocalStateField('documents', documents);\n      }\n\n      const key = `${options.format}:${options.contentType}:${options.path}`;\n      this._providers.set(key, provider);\n\n      sharedModel.changed.connect(async (_, change) => {\n        if (!change.stateChange) {\n          return;\n        }\n        const hashChanges = change.stateChange.filter(\n          change => change.name === 'hash'\n        );\n        if (hashChanges.length === 0) {\n          return;\n        }\n        if (hashChanges.length > 1) {\n          console.error(\n            'Unexpected multiple changes to hash value in a single transaction'\n          );\n        }\n        const hashChange = hashChanges[0];\n\n        // A change in hash signifies that a save occurred on the server-side\n        // (e.g. a collaborator performed the save) - we want to notify the\n        // observers about this change so that they can store the new hash value.\n        const newPath = sharedModel.state.path ?? options.path;\n        const model = await this.get(newPath as string, { content: false });\n\n        this._ydriveFileChanged.emit({\n          type: 'save',\n          newValue: { ...model, hash: hashChange.newValue },\n          // we do not have the old model because it was discarded when server made the change,\n          // we only have the old hash here (which may be empty if the file was newly created!)\n          oldValue: { hash: hashChange.oldValue }\n        });\n      });\n\n      sharedModel.disposed.connect(() => {\n        const provider = this._providers.get(key);\n        if (provider) {\n          provider.dispose();\n          this._providers.delete(key);\n        }\n\n        // Remove the document path from the list of opened ones for this user.\n        const state = this._globalAwareness?.getLocalState() || {};\n        const documents: any[] = state.documents || [];\n        const index = documents.indexOf(options.path);\n        if (index > -1) {\n          documents.splice(index, 1);\n        }\n        this._globalAwareness?.setLocalStateField('documents', documents);\n      });\n    } catch (error) {\n      // Falling back to the contents API if opening the websocket failed\n      //  This may happen if the shared document is not a YDocument.\n      console.error(\n        `Failed to open websocket connection for ${options.path}.\\n:${error}`\n      );\n    }\n  };\n\n  private _user: User.IManager;\n  private _trans: TranslationBundle;\n  private _globalAwareness: Awareness | null;\n  private _providers: Map<string, WebSocketProvider>;\n  private _ydriveFileChanged = new Signal<this, Contents.IChangedArgs>(this);\n  private _serverSettings: ServerConnection.ISettings;\n}\n\n/**\n * Yjs sharedModel factory for real-time collaboration.\n */\nclass SharedModelFactory implements ISharedModelFactory {\n  documentFactories: Map<Contents.ContentType, SharedDocumentFactory>;\n\n  /**\n   * Shared model factory constructor\n   *\n   * @param _onCreate Callback on new document model creation\n   */\n  constructor(\n    private _onCreate: (\n      options: Contents.ISharedFactoryOptions,\n      sharedModel: YDocument<DocumentChange>\n    ) => void\n  ) {\n    this.documentFactories = new Map();\n  }\n\n  /**\n   * Whether the IDrive supports real-time collaboration or not.\n   */\n  readonly collaborative = !DISABLE_RTC;\n\n  /**\n   * Register a SharedDocumentFactory.\n   *\n   * @param type Document type\n   * @param factory Document factory\n   */\n  registerDocumentFactory(\n    type: Contents.ContentType,\n    factory: SharedDocumentFactory\n  ) {\n    if (this.documentFactories.has(type)) {\n      throw new Error(`The content type ${type} already exists`);\n    }\n    this.documentFactories.set(type, factory);\n  }\n\n  /**\n   * Create a new `ISharedDocument` instance.\n   *\n   * It should return `undefined` if the factory is not able to create a `ISharedDocument`.\n   */\n  createNew(\n    options: Contents.ISharedFactoryOptions\n  ): ISharedDocument | undefined {\n    if (typeof options.format !== 'string') {\n      console.warn(`Only defined format are supported; got ${options.format}.`);\n      return;\n    }\n\n    if (!this.collaborative || !options.collaborative) {\n      // Bail if the document model does not support collaboration\n      // the `sharedModel` will be the default one.\n      return;\n    }\n    if (this.documentFactories.has(options.contentType)) {\n      const factory = this.documentFactories.get(options.contentType)!;\n      const sharedModel = factory(options);\n      this._onCreate(options, sharedModel);\n      return sharedModel;\n    }\n\n    return;\n  }\n}\n","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\nimport { IDocumentProvider } from '@jupyter/collaborative-drive';\nimport { showErrorMessage, Dialog } from '@jupyterlab/apputils';\nimport { User } from '@jupyterlab/services';\nimport { TranslationBundle } from '@jupyterlab/translation';\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\n\nimport { DocumentChange, YDocument } from '@jupyter/ydoc';\n\nimport { Awareness } from 'y-protocols/awareness';\nimport { WebsocketProvider as YWebsocketProvider } from 'y-websocket';\nimport { requestAPI } from './requests';\n\n/**\n * A class to provide Yjs synchronization over WebSocket.\n *\n * We specify custom messages that the server can interpret. For reference please look in yjs_ws_server.\n *\n */\n\nexport class WebSocketProvider implements IDocumentProvider {\n  /**\n   * Construct a new WebSocketProvider\n   *\n   * @param options The instantiation options for a WebSocketProvider\n   */\n  constructor(options: WebSocketProvider.IOptions) {\n    this._isDisposed = false;\n    this._path = options.path;\n    this._contentType = options.contentType;\n    this._format = options.format;\n    this._serverUrl = options.url;\n    this._sharedModel = options.model;\n    this._awareness = options.model.awareness;\n    this._yWebsocketProvider = null;\n    this._trans = options.translator;\n\n    const user = options.user;\n\n    user.ready\n      .then(() => {\n        this._onUserChanged(user);\n      })\n      .catch(e => console.error(e));\n    user.userChanged.connect(this._onUserChanged, this);\n\n    this._connect().catch(e => console.warn(e));\n  }\n\n  /**\n   * Test whether the object has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * A promise that resolves when the document provider is ready.\n   */\n  get ready(): Promise<void> {\n    return this._ready.promise;\n  }\n  get contentType(): string {\n    return this._contentType;\n  }\n\n  get format(): string {\n    return this._format;\n  }\n  /**\n   * Dispose of the resources held by the object.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._yWebsocketProvider?.off('connection-close', this._onConnectionClosed);\n    this._yWebsocketProvider?.off('sync', this._onSync);\n    this._yWebsocketProvider?.destroy();\n    this._disconnect();\n    Signal.clearData(this);\n  }\n\n  async reconnect(): Promise<void> {\n    this._disconnect();\n    this._connect();\n  }\n\n  private async _connect(): Promise<void> {\n    // Fetch file ID from the file ID service.\n    const resp = await requestAPI(`api/fileid/index?path=${this._path}`, {\n      method: 'POST'\n    });\n    const fileId: string = resp['id'];\n\n    this._yWebsocketProvider = new YWebsocketProvider(\n      this._serverUrl,\n      `${this._format}:${this._contentType}:${fileId}`,\n      this._sharedModel.ydoc,\n      {\n        disableBc: true,\n        // params: { sessionId: session.sessionId },\n        awareness: this._awareness\n      }\n    );\n\n    this._yWebsocketProvider.on('sync', this._onSync);\n    this._yWebsocketProvider.on('connection-close', this._onConnectionClosed);\n  }\n\n  get wsProvider() {\n    return this._yWebsocketProvider;\n  }\n  private _disconnect(): void {\n    this._yWebsocketProvider?.off('connection-close', this._onConnectionClosed);\n    this._yWebsocketProvider?.off('sync', this._onSync);\n    this._yWebsocketProvider?.destroy();\n    this._yWebsocketProvider = null;\n  }\n\n  private _onUserChanged(user: User.IManager): void {\n    this._awareness.setLocalStateField('user', user.identity);\n  }\n\n  /**\n   * Handles disconnections from the YRoom Websocket.\n   *\n   * TODO: handle disconnections more gracefully by reseting the YDoc to an\n   * empty state on disconnect. Unfortunately the shared model does not provide\n   * any methods for this, so we are just asking disconnected clients to\n   * refresh for now.\n   *\n   * TODO: distinguish between disconnects when server YDoc history is the same\n   * (i.e. SS1 + SS2 is sufficient), and when the history\n   * differs (client's YDoc has to be reset before SS1 + SS2).\n   */\n  private _onConnectionClosed = (event: any): void => {\n    // Log error to console for debugging\n    console.error('WebSocket connection was closed. Close event: ', event);\n\n    // Show dialog to tell user to refresh the page\n    showErrorMessage(\n      this._trans.__('Document session error'),\n      'Please refresh the browser tab.',\n      [Dialog.okButton()]\n    );\n\n    // Delete this client's YDoc by disposing of the shared model.\n    // This is the only way we know of to stop `y-websocket` from constantly\n    // attempting to re-connect.\n    this._sharedModel.dispose();\n  };\n\n  private _onSync = (isSynced: boolean) => {\n    if (isSynced) {\n      if (this._yWebsocketProvider) {\n        this._yWebsocketProvider.off('sync', this._onSync);\n\n        const state = this._sharedModel.ydoc.getMap('state');\n        state.set('document_id', this._yWebsocketProvider.roomname);\n      }\n      this._ready.resolve();\n    }\n  };\n\n  private _awareness: Awareness;\n  private _contentType: string;\n  private _format: string;\n  private _isDisposed: boolean;\n  private _path: string;\n  private _ready = new PromiseDelegate<void>();\n  private _serverUrl: string;\n  private _sharedModel: YDocument<DocumentChange>;\n  private _yWebsocketProvider: YWebsocketProvider | null;\n  private _trans: TranslationBundle;\n}\n\n/**\n * A namespace for WebSocketProvider statics.\n */\nexport namespace WebSocketProvider {\n  /**\n   * The instantiation options for a WebSocketProvider.\n   */\n  export interface IOptions {\n    /**\n     * The server URL\n     */\n    url: string;\n\n    /**\n     * The document file path\n     */\n    path: string;\n\n    /**\n     * Content type\n     */\n    contentType: string;\n\n    /**\n     * The source format\n     */\n    format: string;\n\n    /**\n     * The shared model\n     */\n    model: YDocument<DocumentChange>;\n\n    /**\n     * The user data\n     */\n    user: User.IManager;\n\n    /**\n     * The jupyterlab translator\n     */\n    translator: TranslationBundle;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport React from 'react';\n\nimport { ISessionContext } from '@jupyterlab/apputils';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { VDomRenderer } from '@jupyterlab/ui-components';\n\nimport {\n  Notebook,\n  ExecutionIndicatorComponent,\n  ExecutionIndicator as E\n} from '@jupyterlab/notebook';\n\n/**\n * A VDomRenderer widget for displaying the execution status.\n */\n\nexport class AwarenessExecutionIndicator extends VDomRenderer<AwarenessExecutionIndicator.Model> {\n  /**\n   * Construct the kernel status widget.\n   */\n  constructor(translator?: ITranslator, showProgress: boolean = true) {\n    super(new AwarenessExecutionIndicator.Model());\n    this.translator = translator || nullTranslator;\n    this.addClass('jp-mod-highlighted');\n  }\n\n  /**\n   * Render the execution status item.\n   */\n  render(): JSX.Element | null {\n    if (this.model === null || !this.model.renderFlag) {\n      return <div></div>;\n    } else {\n      const nb = this.model.currentNotebook;\n      if (!nb) {\n        return (\n          <ExecutionIndicatorComponent\n            displayOption={this.model.displayOption}\n            state={undefined}\n            translator={this.translator}\n          />\n        );\n      }\n\n      return (\n        <ExecutionIndicatorComponent\n          displayOption={this.model.displayOption}\n          state={this.model.executionState(nb)}\n          translator={this.translator}\n        />\n      );\n    }\n  }\n\n  private translator: ITranslator;\n}\n\nexport namespace AwarenessExecutionIndicator {\n  export class Model extends E.Model {\n    /**\n     * A weak map to hold execution status of multiple notebooks.\n     */\n    \n    // (this as any) casts are required to avoid \n    // ts errors when accessing private methods\n    attachNotebook(\n      data: { content?: Notebook; context?: ISessionContext } | null\n    ): void {\n      const nb = data?.content;\n      if (!nb) {\n        return;\n      }\n      (this as any)._currentNotebook = nb;\n      (this as any)._notebookExecutionProgress.set(nb, {\n        executionStatus: 'idle',\n        kernelStatus: 'idle',\n        totalTime: 0,\n        interval: 0,\n        timeout: 0,\n        scheduledCell: new Set<string>(),\n        scheduledCellNumber: 0,\n        needReset: true\n      });\n      const state = (this as any)._notebookExecutionProgress.get(nb);\n\n      const contextStatusChanged = (ctx: ISessionContext) => {\n        if (state) {\n          const awarenessStates = nb?.model?.sharedModel.awareness.getStates();\n          if (awarenessStates) {\n            for (const [_, clientState] of awarenessStates) {\n              if ('kernel' in clientState) {\n                state.kernelStatus = clientState['kernel']['execution_state'];\n                this.stateChanged.emit(void 0);\n                return;\n              }\n            }\n          }\n        }\n      };\n\n      nb?.model?.sharedModel.awareness.on('change', contextStatusChanged);\n      super.attachNotebook(data);\n    }\n  }\n}\n","import { URLExt } from '@jupyterlab/coreutils';\n\nimport { ServerConnection } from '@jupyterlab/services';\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI<T>(\n  endPoint = '',\n  init: RequestInit = {}\n): Promise<T> {\n  // Make request to Jupyter API\n  const settings = ServerConnection.makeSettings();\n  const requestUrl = URLExt.join(\n    settings.baseUrl,\n    endPoint.startsWith('/') ? '' : 'jupyter-rtc-core', // API Namespace\n    endPoint\n  );\n\n  let response: Response;\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\n  } catch (error) {\n    throw new ServerConnection.NetworkError(error as any);\n  }\n\n  let data: any = await response.text();\n\n  if (data.length > 0) {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      console.log('Not a JSON response body.', response);\n    }\n  }\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message || data);\n  }\n\n  return data;\n}\n","import {\n  ILabShell,\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { Title, Widget } from '@lumino/widgets';\n\nimport {\n  INotebookTracker,\n  NotebookPanel,\n  INotebookModel\n} from '@jupyterlab/notebook';\nimport { IStatusBar } from '@jupyterlab/statusbar';\nimport { IDisposable } from '@lumino/disposable';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { DocumentRegistry } from '@jupyterlab/docregistry';\nimport {\n  IKernelStatusModel,\n  ISessionContext,\n  ISessionContextDialogs,\n  SessionContextDialogs\n} from '@jupyterlab/apputils';\nimport { KeyboardEvent } from 'react';\nimport { IToolbarWidgetRegistry } from '@jupyterlab/apputils';\nimport { AwarenessExecutionIndicator } from './executionindicator';\n\nimport { IEditorServices } from '@jupyterlab/codeeditor';\nimport { requestAPI } from './handler';\nimport { RtcNotebookContentFactory } from './notebook';\n\nimport { rtcContentProvider, yfile, ynotebook, logger } from './docprovider';\n\nimport { IStateDB, StateDB } from '@jupyterlab/statedb';\nimport { IGlobalAwareness } from '@jupyter/collaborative-drive';\nimport * as Y from 'yjs';\nimport { Awareness } from 'y-protocols/awareness';\nimport { IAwareness } from '@jupyter/ydoc';\n\nimport { ServerConnection } from '@jupyterlab/services';\nimport { WebSocketAwarenessProvider } from './docprovider/awareness';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { AwarenessKernelStatus } from './kernelstatus';\n/**\n * Initialization data for the @jupyter/rtc-core extension.\n */\nexport const plugin: JupyterFrontEndPlugin<void> = {\n  id: '@jupyter/rtc-core:plugin',\n  description: 'A JupyterLab extension that provides RTC capabilities.',\n  autoStart: true,\n  optional: [ISettingRegistry],\n  activate: (\n    app: JupyterFrontEnd,\n    settingRegistry: ISettingRegistry | null\n  ) => {\n    console.log('JupyterLab extension @jupyter/rtc-core is activated!');\n\n    if (settingRegistry) {\n      settingRegistry\n        .load(plugin.id)\n        .then(settings => {\n          console.log('@jupyter/rtc-core settings loaded:', settings.composite);\n        })\n        .catch(reason => {\n          console.error(\n            'Failed to load settings for @jupyter/rtc-core.',\n            reason\n          );\n        });\n    }\n\n    requestAPI<any>('get-example')\n      .then(data => {\n        console.log(data);\n      })\n      .catch(reason => {\n        console.error(\n          `The jupyter_rtc_core server extension appears to be missing.\\n${reason}`\n        );\n      });\n  }\n};\n\n/**\n * Jupyter plugin creating a global awareness for RTC.\n */\nexport const rtcGlobalAwarenessPlugin: JupyterFrontEndPlugin<IAwareness> = {\n  id: '@jupyter/rtc-core/collaboration-extension:rtcGlobalAwareness',\n  description: 'Add global awareness to share working document of users.',\n  requires: [IStateDB],\n  provides: IGlobalAwareness,\n  activate: (app: JupyterFrontEnd, state: StateDB): IAwareness => {\n    const { user } = app.serviceManager;\n\n    const ydoc = new Y.Doc();\n    const awareness = new Awareness(ydoc);\n\n    // TODO: Uncomment once global awareness is working\n    const server = ServerConnection.makeSettings();\n    const url = URLExt.join(server.wsUrl, 'api/collaboration/room');\n\n    new WebSocketAwarenessProvider({\n      url: url,\n      roomID: 'JupyterLab:globalAwareness',\n      awareness: awareness,\n      user: user\n    });\n\n    state.changed.connect(async () => {\n      const data: any = await state.toJSON();\n      const current: string = data['layout-restorer:data']?.main?.current || '';\n\n      // For example matches `notebook:Untitled.ipynb` or `editor:untitled.txt`,\n      // but not when in launcher or terminal.\n      if (current.match(/^\\w+:.+/)) {\n        awareness.setLocalStateField('current', current);\n      } else {\n        awareness.setLocalStateField('current', null);\n      }\n    });\n\n    return awareness;\n  }\n};\n\nclass AwarenessExecutionIndicatorIcon\n  implements DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>\n{\n  createNew(panel: NotebookPanel): IDisposable {\n    const item = new AwarenessExecutionIndicator();\n    const nb = panel.content;\n    item.model.attachNotebook({ content: nb });\n    panel.toolbar.insertAfter('kernelName', 'awarenessExecutionProgress', item);\n    return item;\n  }\n}\n\n/**\n * A plugin that provides a execution indicator item to the status bar.\n */\nexport const executionIndicator: JupyterFrontEndPlugin<void> = {\n  id: '@jupyter/rtc-core:awareness-execution-indicator',\n  description: 'Adds a notebook execution status widget.',\n  autoStart: true,\n  requires: [INotebookTracker, ILabShell, ITranslator, IToolbarWidgetRegistry],\n  optional: [IStatusBar, ISettingRegistry],\n  activate: (\n    app: JupyterFrontEnd,\n    notebookTracker: INotebookTracker,\n    labShell: ILabShell,\n    translator: ITranslator,\n    statusBar: IStatusBar | null,\n    settingRegistry: ISettingRegistry | null,\n    toolbarRegistry: IToolbarWidgetRegistry\n  ) => {\n    console.log(\n      'JupyterLab extension activated: Awareness Execution Indicator'\n    );\n    app.docRegistry.addWidgetExtension(\n      'Notebook',\n      new AwarenessExecutionIndicatorIcon()\n    );\n  }\n};\n\n/**\n * A plugin that provides a kernel status item to the status bar.\n */\nexport const kernelStatus: JupyterFrontEndPlugin<IKernelStatusModel> = {\n  id: '@jupyterlab/apputils-extension:awareness-kernel-status',\n  description: 'Provides the kernel status indicator model.',\n  autoStart: true,\n  requires: [IStatusBar],\n  provides: IKernelStatusModel,\n  optional: [ISessionContextDialogs, ITranslator, ILabShell],\n  activate: (\n    app: JupyterFrontEnd,\n    statusBar: IStatusBar,\n    sessionDialogs_: ISessionContextDialogs | null,\n    translator_: ITranslator | null,\n    labShell: ILabShell | null\n  ): IKernelStatusModel => {\n    console.log(\n      'JupyterLab extension activated: Awareness Kernel Status Indicator'\n    );\n    const translator = translator_ ?? nullTranslator;\n    const sessionDialogs =\n      sessionDialogs_ ?? new SessionContextDialogs({ translator });\n    // When the status item is clicked, launch the kernel\n    // selection dialog for the current session.\n    const changeKernel = async () => {\n      if (!item.model.sessionContext) {\n        return;\n      }\n      await sessionDialogs.selectKernel(item.model.sessionContext);\n    };\n\n    const changeKernelOnKeyDown = async (\n      event: KeyboardEvent<HTMLImageElement>\n    ) => {\n      if (\n        event.key === 'Enter' ||\n        event.key === 'Spacebar' ||\n        event.key === ' '\n      ) {\n        event.preventDefault();\n        event.stopPropagation();\n        return changeKernel();\n      }\n    };\n\n    // Create the status item.\n    const item = new AwarenessKernelStatus(\n      { onClick: changeKernel, onKeyDown: changeKernelOnKeyDown },\n      translator\n    );\n\n    const providers = new Set<(w: Widget | null) => ISessionContext | null>();\n\n    const addSessionProvider = (\n      provider: (w: Widget | null) => ISessionContext | null\n    ): void => {\n      providers.add(provider);\n\n      if (app.shell.currentWidget) {\n        updateSession(app.shell, {\n          newValue: app.shell.currentWidget,\n          oldValue: null\n        });\n      }\n    };\n\n    function updateSession(\n      shell: JupyterFrontEnd.IShell,\n      changes: ILabShell.IChangedArgs\n    ) {\n      const { oldValue, newValue } = changes;\n\n      // Clean up after the old value if it exists,\n      // listen for changes to the title of the activity\n      if (oldValue) {\n        oldValue.title.changed.disconnect(onTitleChanged);\n      }\n\n      item.model.attachDocument(newValue);\n      item.model.sessionContext =\n        [...providers]\n          .map(provider => provider(changes.newValue))\n          .filter(session => session !== null)[0] ?? null;\n\n      if (newValue && item.model.sessionContext) {\n        onTitleChanged(newValue.title);\n        newValue.title.changed.connect(onTitleChanged);\n      }\n    }\n\n    // When the title of the active widget changes, update the label\n    // of the hover text.\n    const onTitleChanged = (title: Title<Widget>) => {\n      item.model!.activityName = title.label;\n    };\n\n    if (labShell) {\n      labShell.currentChanged.connect(updateSession);\n    }\n\n    statusBar.registerStatusItem(kernelStatus.id, {\n      priority: 1,\n      item,\n      align: 'left',\n      rank: 1,\n      isActive: () => true\n    });\n\n    return { addSessionProvider };\n  }\n};\n\n/**\n * The notebook cell factory provider.\n */\nconst factory: JupyterFrontEndPlugin<NotebookPanel.IContentFactory> = {\n  id: '@jupyter/rtc-core/notebook-extension:factory',\n  description: 'Provides the notebook cell factory.',\n  provides: NotebookPanel.IContentFactory,\n  requires: [IEditorServices],\n  autoStart: true,\n  activate: (app: JupyterFrontEnd, editorServices: IEditorServices) => {\n    const editorFactory = editorServices.factoryService.newInlineEditor;\n    return new RtcNotebookContentFactory({ editorFactory });\n  }\n};\n\nconst plugins: JupyterFrontEndPlugin<unknown>[] = [\n  rtcContentProvider,\n  yfile,\n  ynotebook,\n  logger,\n  rtcGlobalAwarenessPlugin,\n  plugin,\n  executionIndicator,\n  kernelStatus,\n  factory\n];\n\nexport default plugins;\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { TextItem } from '@jupyterlab/statusbar';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { VDomRenderer } from '@jupyterlab/ui-components';\nimport React, { KeyboardEvent } from 'react';\nimport { ISessionContext } from '@jupyterlab/apputils';\nimport { Widget } from '@lumino/widgets';\nimport { KernelStatus as K } from '@jupyterlab/apputils';\nimport { NotebookPanel } from '@jupyterlab/notebook';\nimport { Session } from '@jupyterlab/services';\n\n/**\n * A pure functional component for rendering kernel status.\n */\nfunction KernelStatusComponent(\n  props: KernelStatusComponent.IProps\n): React.ReactElement<KernelStatusComponent.IProps> {\n  const translator = props.translator || nullTranslator;\n  const trans = translator.load('jupyterlab');\n  let statusText = '';\n  if (props.status) {\n    statusText = ` | ${props.status}`;\n  }\n  return (\n    <TextItem\n      onClick={props.handleClick}\n      onKeyDown={props.handleKeyDown}\n      source={`${props.kernelName}${statusText}`}\n      title={trans.__('Change kernel for %1', props.activityName)}\n      tabIndex={0}\n    />\n  );\n}\n\n/**\n * A namespace for KernelStatusComponent statics.\n */\nnamespace KernelStatusComponent {\n  /**\n   * Props for the kernel status component.\n   */\n  export interface IProps {\n    /**\n     * A click handler for the kernel status component. By default\n     * we have it bring up the kernel change dialog.\n     */\n    handleClick: () => void;\n\n    /**\n     * A key down handler for the kernel status component. By default\n     * we have it bring up the kernel change dialog.\n     */\n    handleKeyDown: (event: KeyboardEvent<HTMLImageElement>) => void;\n\n    /**\n     * The name the kernel.\n     */\n    kernelName: string;\n\n    /**\n     * The name of the activity using the kernel.\n     */\n    activityName: string;\n\n    /**\n     * The status of the kernel.\n     */\n    status?: string;\n\n    /**\n     * The application language translator.\n     */\n    translator?: ITranslator;\n  }\n}\n\nexport class AwarenessKernelStatus extends VDomRenderer<AwarenessKernelStatus.Model> {\n  /**\n   * Construct the kernel status widget.\n   */\n  constructor(opts: K.IOptions, translator?: ITranslator) {\n    super(new AwarenessKernelStatus.Model(translator));\n    this.translator = translator || nullTranslator;\n    this._handleClick = opts.onClick;\n    this._handleKeyDown = opts.onKeyDown;\n    this.addClass('jp-mod-highlighted');\n  }\n\n  /**\n   * Render the kernel status item.\n   */\n  render(): JSX.Element | null {\n    if (this.model === null) {\n      return null;\n    } else {\n      return (\n        <KernelStatusComponent\n          status={this.model.status}\n          kernelName={this.model.kernelName}\n          activityName={this.model.activityName}\n          handleClick={this._handleClick}\n          handleKeyDown={this._handleKeyDown}\n          translator={this.translator}\n        />\n      );\n    }\n  }\n\n  translator: ITranslator;\n  private _handleClick: () => void;\n  private _handleKeyDown: (event: KeyboardEvent<HTMLImageElement>) => void;\n}\n\nexport namespace AwarenessKernelStatus {\n  export class Model extends K.Model {\n    attachDocument(widget: Widget | null) {\n      if (!widget) {\n        return;\n      }\n      const panel = widget as NotebookPanel;\n      const stateChanged = () => {\n        if (this) {\n          const awarenessStates =\n            panel?.model?.sharedModel.awareness.getStates();\n          if (awarenessStates) {\n            for (const [_, clientState] of awarenessStates) {\n              if ('kernel' in clientState) {\n                (this as any)._kernelStatus =\n                  clientState['kernel']['execution_state'];\n                (this as any).stateChanged.emit(void 0);\n                return;\n              }\n            }\n          }\n        }\n      };\n      panel.model?.sharedModel.awareness.on('change', stateChanged);\n    }\n\n    set sessionContext(sessionContext: ISessionContext | null) {\n      const oldState = (this as any)._getAllState();\n      (this as any)._sessionContext = sessionContext;\n      (this as any)._kernelName =\n        sessionContext?.kernelDisplayName ??\n        (this as any)._trans.__('No Kernel');\n      (this as any)._triggerChange(oldState, (this as any)._getAllState());\n      sessionContext?.kernelChanged.connect(\n        this._onKernelDisplayNameChanged,\n        this\n      );\n    }\n    /**\n     * React to changes in the kernel.\n     */\n    private _onKernelDisplayNameChanged(\n      _sessionContext: ISessionContext,\n      change: Session.ISessionConnection.IKernelChangedArgs\n    ) {\n      const oldState = (this as any)._getAllState();\n\n      // sync setting of status and display name\n      (this as any)._kernelName = _sessionContext.kernelDisplayName;\n      (this as any)._triggerChange(oldState, (this as any)._getAllState());\n    }\n  }\n}\n","import { CodeCell, CodeCellModel } from '@jupyterlab/cells';\nimport { NotebookPanel, NotebookModel } from '@jupyterlab/notebook';\nimport { CellChange, createMutex, ISharedCodeCell } from '@jupyter/ydoc';\nimport { IOutputAreaModel, OutputAreaModel } from '@jupyterlab/outputarea';\nimport { requestAPI } from './handler';\nimport { ISharedNotebook, NotebookChange } from '@jupyter/ydoc'\n\nconst globalModelDBMutex = createMutex();\n\n(CodeCellModel.prototype as any)._onSharedModelChanged = function (\n  slot: ISharedCodeCell,\n  change: CellChange\n) {\n  if (change.streamOutputChange) {\n    globalModelDBMutex(() => {\n      for (const streamOutputChange of change.streamOutputChange!) {\n        if ('delete' in streamOutputChange) {\n          this._outputs.removeStreamOutput(streamOutputChange.delete!);\n        }\n        if ('insert' in streamOutputChange) {\n          this._outputs.appendStreamOutput(\n            streamOutputChange.insert!.toString()\n          );\n        }\n      }\n    });\n  }\n\n  if (change.outputsChange) {\n    globalModelDBMutex(() => {\n      let retain = 0;\n      for (const outputsChange of change.outputsChange!) {\n        if ('retain' in outputsChange) {\n          retain += outputsChange.retain!;\n        }\n        if ('delete' in outputsChange) {\n          for (let i = 0; i < outputsChange.delete!; i++) {\n            this._outputs.remove(retain);\n          }\n        }\n        if ('insert' in outputsChange) {\n          // Inserting an output always results in appending it.\n          for (const output of outputsChange.insert!) {\n            // For compatibility with older ydoc where a plain object,\n            // (rather than a Map instance) could be provided.\n            // In a future major release the use of Map will be required.\n            if ('toJSON' in output) {\n              const json = (output as { toJSON: () => any }).toJSON();\n              if (json.metadata?.url) {\n                // fetch the output from ouputs service\n                requestAPI(json.metadata.url).then(data => {\n                  this._outputs.add(data);\n                });\n              } else {\n                this._outputs.add(json);\n              }\n            } else {\n              this._outputs.add(output);\n            }\n          }\n        }\n      }\n    });\n  }\n  if (change.executionCountChange) {\n    if (\n      change.executionCountChange.newValue &&\n      (this.isDirty || !change.executionCountChange.oldValue)\n    ) {\n      this._setDirty(false);\n    }\n    this.stateChanged.emit({\n      name: 'executionCount',\n      oldValue: change.executionCountChange.oldValue,\n      newValue: change.executionCountChange.newValue\n    });\n  }\n\n  if (change.executionStateChange) {\n    this.stateChanged.emit({\n      name: 'executionState',\n      oldValue: change.executionStateChange.oldValue,\n      newValue: change.executionStateChange.newValue\n    });\n  }\n  if (change.sourceChange && this.executionCount !== null) {\n    this._setDirty(this._executedCode !== this.sharedModel.getSource().trim());\n  }\n};\n\n(CodeCellModel as any).prototype.onOutputsChange = function (\n  sender: IOutputAreaModel,\n  event: IOutputAreaModel.ChangedArgs\n) {\n  // no-op\n};\n\n/* An OutputAreaModel that loads outputs from outputs service */\nclass RtcOutputAreaModel extends OutputAreaModel implements IOutputAreaModel {\n  constructor(options: IOutputAreaModel.IOptions = {}) {\n    super({ ...options, values: [] }); // Don't pass values to OutputAreaModel\n    if (options.values) {\n      // Create an array to store promises for each value\n      const valuePromises = options.values.map(value => {\n        console.debug('output #${index}, value: ${value}');\n        if ((value as any).metadata?.url) {\n          return requestAPI((value as any).metadata.url)\n            .then(data => {\n              return data;\n            })\n            .catch(error => {\n              console.error('Error fetching output:', error);\n              return null;\n            });\n        } else {\n          // For values without url, return immediately with original value\n          return Promise.resolve(value);\n        }\n      });\n\n      // Wait for all promises to resolve and add values in original order\n      Promise.all(valuePromises).then(results => {\n        console.log('After fetching from outputs service:');\n        // Add each value in order\n        results.forEach((data, index) => {\n          console.debug('output #${index}, data: ${data}');\n          if (data && !(this as any).isDisposed) {\n            const index = (this as any)._add(data) - 1;\n            const item = (this as any).list.get(index);\n            item.changed.connect((this as any)._onGenericChange, this);\n          }\n        });\n      });\n    }\n  }\n}\n\n(NotebookModel.prototype as any)._onStateChanged = function(\n    sender: ISharedNotebook,\n    changes: NotebookChange\n  ): void {\n    if (changes.stateChange) {\n      changes.stateChange.forEach(value => {\n        if (value.name === 'dirty') {\n          // Setting `dirty` will trigger the state change.\n          // We always set `dirty` because the shared model state\n          // and the local attribute are synchronized one way shared model -> _dirty\n          this.dirty = value.newValue;\n        } else if (value.oldValue !== value.newValue) {\n          this.triggerStateChange({\n            newValue: undefined,\n            oldValue: undefined,\n            ...value\n          });\n        }\n      });\n    }\n  }\n\n  Object.defineProperty(NotebookModel.prototype, \"dirty\", {\n    set: function(newValue: boolean) {\n      console.trace(\"Calling set dirty with value: \", newValue);\n      const oldValue = this._dirty;\n      if (newValue === oldValue) {\n        return;\n      }\n      this._dirty = newValue;\n      this.triggerStateChange({\n        name: 'dirty',\n        oldValue,\n        newValue\n      });\n    },\n    get: function(){\n      return this._readOnly;\n    },\n    enumerable: true,\n    configurable: true  \n  });\n\nCodeCellModel.ContentFactory.prototype.createOutputArea = function (\n  options: IOutputAreaModel.IOptions\n): IOutputAreaModel {\n  return new RtcOutputAreaModel(options);\n};\n\nexport class RtcNotebookContentFactory\n  extends NotebookPanel.ContentFactory\n  implements NotebookPanel.IContentFactory\n{\n  createCodeCell(options: CodeCell.IOptions): CodeCell {\n    return new CodeCell(options).initializeState();\n  }\n}\n"],"names":[],"sourceRoot":""}